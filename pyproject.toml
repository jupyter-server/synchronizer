[build-system]
requires = ["hatchling>=1.5"]
build-backend = "hatchling.build"

[project]
name = "jupyter_server_synchronizer"
dynamic = ["version"]
readme = "README.md"
license = { file = "COPYING.md" }
description = "A Jupyter Server Session Manager that rehydrates and synchronizes Jupyter sessions (e.g. notebook-kernel connections)."
keywords = ["ipython", "jupyter"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Jupyter",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = ["jupyter_server>=1.16.0"]

[[project.authors]]
name = "Jupyter Development Team"
email = "jupyter@googlegroups.com"

[project.urls]
Homepage = "https://jupyter-server-synchronizer.readthedocs.io"
Documentation = "https://jupyter-server-synchronizer.readthedocs.io"
Funding = "https://numfocus.org/donate"
Source = "https://github.com/jupyter-server/synchronizer"
Tracker = "https://github.com/jupyter-server/synchronizer/issues"

[project.optional-dependencies]
test = [
  "coverage",
  "pre-commit",
  "pytest-cov",
  "pytest-timeout",
  "pytest-tornasync",
  "pytest>=7.0",
]

[tool.hatch.version]
path = "jupyter_server_synchronizer/_version.py"
validate-bump = false

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
test = "python -m pytest -vv {args}"
nowarn = "test -W default {args}"

[tool.hatch.envs.cov]
features = ["test"]
dependencies = ["coverage", "pytest-cov"]
[tool.hatch.envs.cov.scripts]
test = "python -m pytest -vv --cov jupyter_server_synchronizer --cov-branch --cov-report term-missing:skip-covered {args}"
nowarn = "test -W default {args}"

[tool.jupyter-releaser.options]
post-version-spec = "dev"

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
testpaths = [
    "tests/"
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\bProtocol\\):",
"@(abc\\.)?abstractmethod",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.flake8]
ignore = "E501, W503, E402"
builtins = "c, get_config"
exclude = [
    ".cache",
    ".github",
    "docs",
    "setup.py",
]
enable-extensions = "G"
extend-ignore = [
    "G001", "G002", "G004", "G200", "G201", "G202",
    # black adds spaces around ':'
    "E203",
]
per-file-ignores = [
    # B011: Do not call assert False since python -O removes these calls
    # F841 local variable 'foo' is assigned to but never used
    "tests/*: B011", "F841",
]
